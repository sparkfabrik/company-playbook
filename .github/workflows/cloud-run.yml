# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  IMAGE_REGISTRY: europe-west1-docker.pkg.dev
  IMAGE_REPOSITORY: ${{ secrets.RUN_PROJECT }}/sparkfabrik-applications
  RUN_REGION: europe-west1
  SERVICE_NAME: company-playbook
  SERVICE_ACCOUNT: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.RUN_SA_CREDS }}

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2
        with:
          #service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      # Build and push image to Google Container Registry
      - name: Build
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}/${SERVICE_NAME}:${GITHUB_SHA}"

      # Deploy image to Cloud Run
      - name: Deploy
        run: |-
          gcloud run deploy "${SERVICE_NAME}" \
            --quiet \
            --region "${RUN_REGION}" \
            --image "${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}/${SERVICE_NAME}:${GITHUB_SHA}" \
            --platform "managed" \
            --service-account="${SERVICE_ACCOUNT}" \
            --allow-unauthenticated

      # Update traffic routing to send all traffic to the latest revision
      - name: Update traffic
        run: |-
          gcloud run services update-traffic "${SERVICE_NAME}" \
            --region "${RUN_REGION}" \
            --to-latest
